@attribute [Route(Routes.Attempts)]
@using LcTracker.Core.Storage
@using LcTracker.Core.Features.Attempts
@using LcTracker.Core.Auth
@using Microsoft.EntityFrameworkCore
@attribute [StreamRendering]
@inject AppDbContext DbContext;
@inject IGetCurrentUserId GetCurrentUser;
@inject NavigationManager Navigation

<PageTitle>Attempts</PageTitle>

<h1>Attempts</h1>

<button class="btn btn-primary" @onclick='() => Navigation.NavigateTo(Routes.CreateAttempt)'>New</button>

@if (_attempts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Problem</th>
                <th>Date</th>
                <th>Minutes spent</th>
                <th>Difficulty</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var attempt in _attempts)
            {
                <tr>
                    <td>@attempt.ProblemId</td>
                    <td>@attempt.Date</td>
                    <td>@attempt.MinutesSpent</td>
                    <td>@attempt.PerceivedDifficulty</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Attempt>? _attempts;

    protected override async Task OnInitializedAsync()
    {
        var currentUserId = GetCurrentUser.Execute();
        _attempts = await DbContext.Attempts.Where(x => x.AppUserId == currentUserId).ToListAsync();
    }
}
